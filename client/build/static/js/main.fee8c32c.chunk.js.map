{"version":3,"sources":["utils/auth.js","components/Display2/index.js","components/Display/index.js","pages/Home.js","utils/mutations.js","pages/Login.js","pages/Signup.js","assets/logo.png","components/Header/index.js","utils/queries.js","pages/Profile.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Display2","className","class","ProgressBar","striped","variant","Display","Home","Auth","loggedIn","to","ADD_USER","gql","LOGIN_USER","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","data","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","console","log","variables","onSubmit","placeholder","type","onChange","style","cursor","message","Signup","username","addUser","Header","src","logo","alt","getProfile","onClick","logout","QUERY_ME","QUERY_USER","Profile","userParam","useParams","useQuery","loading","user","me","border","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee8c32c.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport { useQuery } from '@apollo/client';\n\nimport Button from 'react-bootstrap/Button';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n// import { QUERY_ALL_BUDGETS } from '../../utils/queries';\nimport './style.css';\n\nexport default function Display2() {\n\n    // const { loading, data } = useQuery(QUERY_ALL_BUDGETS);\n\n    // Use optional chaining to check if data exists and if it has a budgets property. If not, return an empty array to use.\n    // const buds = data?.budgets || [];\n\n    return (\n    \n<>\n      <div className=\"overview-container\">\n        <div>\n            <h1>Financial Overview</h1>\n          </div>\n          <div>\n            Yearly Income: $85,000\n          </div>\n\n        <div class=\"place-container\">\n          <div>\n            <ul>Monthly Budget: $4,500</ul>\n            <ul>Monthly Bills: $2,100</ul>\n          </div>\n          <ProgressBar className=\"rounded-pill\">\n  <ProgressBar striped variant=\"success\" now={35} key={1} />\n  <ProgressBar variant=\"warning\" now={20} key={2} />\n  <ProgressBar striped variant=\"danger\" now={10} key={3} />\n</ProgressBar>\n        </div>\n      </div>\n      <br></br>\n  </>\n   \n    )\n};","import React from \"react\";\nimport Display2 from \"../Display2\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import DisplayProgressBar from \"../DisplayProgressBar\";\n\n// import Display3 from \"../Display3\";\n\n\n\nexport default function Display() {\n    return (\n    <>\n    <Display2/>\n\n    </>\n    )\n};","import React from \"react\";\n\nimport BillsInput from \"../components/BillsInput\";\nimport BillsList from \"../components/BillsList\";\nimport BudgetInput from \"../components/BudgetInput\";\nimport Display from \"../components/Display\";\nimport { Link } from 'react-router-dom';\nimport Auth from '../utils/auth';\nimport Display2 from \"../components/Display2\";\n\n\nconst Home = () => {\n\n  if (Auth.loggedIn()) {\n    return (\n      <>\n      <Display />\n      {/* // <main>\n      //   <BudgetInput />\n      // <BillsInput />\n      // <BillsList />\n      // <Display /> \n      \n      // </main> */}\n      </>\n    );\n  } else {\n    return (<>\n     MORE MONEY MORE PROBLEMS\n        \n        <br></br>\n        Animation logo intro\n        <br></br>\n        Loading\n        <br></br>\n      <ul className=\"flex-row\">\n\n       \n\n\n        <li>\n          <Link to=\"/signup\">\n            Signup\n          </Link>\n        </li>\n        <li className=\"mx-1\">\n          <Link to=\"/login\">\n            Login\n          </Link>\n        </li>\n      </ul>\n      </>\n    );\n  }\n\n \n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($budgets: [ID]!) {\n    addOrder(budgets: $budgets) {\n      purchaseDate\n      budgets {\n        _id\n        name\n        description\n        amountofmoney\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","export default __webpack_public_path__ + \"static/media/logo.405c758a.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from \"../../assets/logo.png\";\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n          <img src={logo} alt=\"logo\" />\n          \n          </Link>\n     \n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s Budget\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { gql } from '@apollo/client';\n\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      budgets {\n        _id\n        billName\n        billsDescription\n        createdAt\n      }\n    }\n  }\n`;\n\n\n\n\nexport const QUERY_THOUGHTS = gql`\n  query getThoughts {\n    budgets {\n      _id\n      billName\n      billsDescription\n      createdAt\n    }\n  }\n`;\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($budgets: [ID]!) {\n    checkout(budgets: $budgets) {\n      session\n    }\n  }\n`;\n\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      budgets {\n        _id\n        billName\n        createdAt\n      }\n    }\n  }\n`;","import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n\n\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You Budget\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n     \n        </div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: '1px dotted #1a1a1a' }}\n          >\n   \n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,  InMemoryCache,  ApolloProvider,  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Header from './components/Header';\nimport Profile from './pages/Profile';\n\n\n\n// import Success from './pages/Success';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n        <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/home\">\n              <Home />\n            </Route>\n            <Route exact path=\"/me\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/profiles/:username\">\n              <Profile />\n            </Route>\n           \n          </div>\n     \n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an "],"sourceRoot":""}